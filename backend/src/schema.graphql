# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  createItem(
    title: String
    categoryId: Int
    description: String
    listPrice: Int
    bestPrice: Int
    image: String
    largeImage: String
    reference: String
  ): Item!

  updateItem(
    id: ID!
    title: String
    categoryId: Int
    description: String
    listPrice: Int
    bestPrice: Int
    image: String
    largeImage: String
    reference: String
  ): Item!

  deleteItem(id: ID!): Item

  signup(
    email: String!
    document: String!
    password: String!
    name: String!
  ): User!

  signin(email: String!, password: String!, remember: Boolean!): User!

  signout: SuccessMessage

  requestReset(email: String!): SuccessMessage

  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!

  updatePermissions(permissions: [Permission], userId: ID!): User

  updateInfos(id: ID!, name: String, birthday: DateTime, document: String,  phone: String): User

  updateAvatar(id: ID!, avatar: String): User

  addToCart(id: ID!): CartItem

  removeFromCart(id: ID!): CartItem

  createOrder(token: String!, paymentMethod: String!): Order!
}

type Query {
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  me: User
  users: [User]!
  order(id: ID!): Order
  orders(orderBy: OrderOrderByInput): [Order]!
}

type User {
  id: ID!
  name: String!
  document: String!
  email: String!
  birthday: DateTime
  balance: Float
  phone: String
  avatar: String
  permissions: [Permission!]!
  badges: [Badges!]!
  cart: [CartItem!]!
  orders: [OrderItem]
}
